name: deploy-api

on:
  push:
    branches: [master]
    paths:
      - "apps/api/**"
  pull_request:
    branches: [master]
    paths:
      - "apps/api/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API_JWT_SECRET: ${{ secrets.API_JWT_SECRET }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_ENV

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        id: yarn-cache
        with:
          path: ${{ env.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          API_JWT_SECRET: ${{ secrets.API_JWT_SECRET }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          yarn global add turbo
          npx nps prepare.ci.api
          npx nps build.ci.api
          npx nps test.ci.api || { echo 'Tests failed'; exit 1; }
          cd out && vercel --name user-management-api --prod --confirm --token=$VERCEL_TOKEN --env API_JWT_SECRET=$API_JWT_SECRET --env DB_DATABASE=$DB_DATABASE --env DB_HOST=$DB_HOST --env DB_PORT=$DB_PORT --env DB_USERNAME=$DB_USERNAME --env DB_PASSWORD=$DB_PASSWORD || { echo 'Deployment failed'; exit 1; }